% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pathWAS_enet.R
\name{pathWAS_enet}
\alias{pathWAS_enet}
\title{Conduct Elasticnet Mendelian randomisation of clumped SNPs from pathway genes on end-point omics}
\usage{
pathWAS_enet(
  genelist,
  clumped_snps,
  qtl_sumstats,
  MRInput = NULL,
  geneCol = "gene",
  omics_snps,
  omics_SNPCol = "rsid",
  omics_BetaCol = "beta1",
  omics_SECol = "se",
  end_point = NULL,
  path_select = NULL,
  verbose = TRUE
)
}
\arguments{
\item{genelist}{list. List of genes extracted from database for your pathway which overlap with your QTL data.}

\item{clumped_snps}{data frame. The data frame of clumped SNPs output from qtl_clumpR.}

\item{qtl_sumstats}{character. File location for the QTLs used (either divided by gene or complete data).}

\item{geneCol}{character. Name or number of column containing the name of the gene for each SNP in the QTL data. Default is "gene". Ensure the format of the name is the same as your gene list.}

\item{omics_snps}{data frame. Summary stats of end-point omcis, now including FLIP column frm omics_MungeR}

\item{omics_SNPCol}{character. Name/number of column containing the SNP ID in the omics data frame.}

\item{omics_BetaCol}{character. Name/number of column containing the effect size in the omics data frame.}

\item{omics_SECol}{character. Name/number of column containing the standard error in the omics data frame.}

\item{end_point}{character. Name of end point protein (can be any string). Used for saving purposes if any save variable is set to TRUE.}

\item{path_select}{character. Name of pathway (can be any string). Used for saving purposes if any save variable is set to TRUE.}

\item{verbose}{logical. Enables chatty error and progress reporting.}

\item{save_MRInput}{MR Input object. Contains a matrix of exposure SNPs to betas, exposure SNPs to SEs and then a list of outcome SNP betas and SEs. Default is NULL so function will create one for you.}
}
\description{
Variant of the pathWAS_MR function, performs elasticnet mendelian randomisation on input SNPs and PRS from PathWAS
pipeline. Outputs an elasticnet object which can be used for further downstream analysis.
}
\details{
This function requires the input of numerous pieces of data from throughout the PathWAS pipeline. The list
of genes (acquired from searching for the pathway genes) is needed to select specific QTL SNPs for conducting
the MR, this list must exclude the end-point gene. A data frame containing the SNPs produced by clumping (qtl_clumpR) is needed for pruning the QTLs by
clumped SNPs. A file location of the data frame of your QTL SNPs including a column with the named gene which must match the format
of the input gene list (I.e. HGNC format), this can either be the total available sumstats or can point to
multiple files divided up by gene. This should also include all SNPs for every gene and not just significant ones.
Lastly the data frame of your end-point omics. This must have first been through the omics_MungeR function
to add the "FLIP" column (you will now also be required to define columns for the effect size and standard error).
The QTL file location can either be a total file of all genes and SNPs in your data, or it can be individual
files divided up by gene (for easier/quicker reading). If it is the latter, then the file name must be in the
following format: "/opt/dir/eqtl_data_$$$.tsv" where "$$$" will be the name of one of the gene.
With all of this provided this function first creates two matrices of SNPs which overlap between the clumped
SNPs and the QTL SNPs. This will provide a matrix of SNPs against genes and provide the standard error and beta
of each. In the cases where there is no data for the clumped SNP for one of the genes, the standard error and
beta are both set to extremely low (1 and 0.0000001 respectively).
These matrices are used as the input for mr_mvinput from the MendelianRandomization R package (which is required
to run this function). This function also requires the betas and SEs from the omics SNPs, with the betas now
aligned to the QTLs using the newly created "FLIP" column.
You have the option of providing a previously created MR input object which allows most of this to be skipped
and the function will immediately create the elastic net output.
}
